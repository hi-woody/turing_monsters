[{"E:\\Lokian.eth\\src\\index.tsx":"1","E:\\Lokian.eth\\src\\AppContainer.tsx":"2","E:\\Lokian.eth\\src\\App.tsx":"3","E:\\Lokian.eth\\src\\utils\\txFail.js":"4","E:\\Lokian.eth\\src\\utils\\txSuccess.js":"5","E:\\Lokian.eth\\src\\wallet\\connectors.ts":"6","E:\\Lokian.eth\\src\\wallet\\hooks.ts":"7","E:\\Lokian.eth\\src\\StatBar.tsx":"8","E:\\Lokian.eth\\src\\components\\Spinner.tsx":"9","E:\\Lokian.eth\\src\\sprites-copy\\index.js":"10","E:\\Lokian.eth\\src\\sprites\\index.js":"11"},{"size":203,"mtime":1632645713483,"results":"12","hashOfConfig":"13"},{"size":461,"mtime":1632416988498,"results":"14","hashOfConfig":"13"},{"size":50260,"mtime":1648917554094,"results":"15","hashOfConfig":"13"},{"size":378,"mtime":1648916010540,"results":"16","hashOfConfig":"13"},{"size":408,"mtime":1648916010540,"results":"17","hashOfConfig":"13"},{"size":171,"mtime":1648796480580,"results":"18","hashOfConfig":"13"},{"size":2588,"mtime":1633872796792,"results":"19","hashOfConfig":"13"},{"size":257,"mtime":1633872639985,"results":"20","hashOfConfig":"13"},{"size":805,"mtime":1633340784350,"results":"21","hashOfConfig":"13"},{"size":7315,"mtime":1648804917278,"results":"22","hashOfConfig":"13"},{"size":7315,"mtime":1648804917278,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"18w6p6u",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"E:\\Lokian.eth\\src\\index.tsx",[],["50","51"],"E:\\Lokian.eth\\src\\AppContainer.tsx",["52"],"import React from 'react'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport App from './App'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\n\r\nfunction getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider)\r\n  library.pollingInterval = 12000\r\n  return library\r\n}\r\n\r\nexport default function () {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <App />\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n","E:\\Lokian.eth\\src\\App.tsx",["53","54","55","56"],"E:\\Lokian.eth\\src\\utils\\txFail.js",[],["57","58"],"E:\\Lokian.eth\\src\\utils\\txSuccess.js",[],"E:\\Lokian.eth\\src\\wallet\\connectors.ts",[],"E:\\Lokian.eth\\src\\wallet\\hooks.ts",["59"],"import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport { injected } from './connectors'\r\n\r\nexport function useEagerConnect() {\r\n    const { activate, active } = useWeb3React()\r\n  \r\n    const [tried, setTried] = useState(false)\r\n  \r\n    useEffect(() => {\r\n      injected.isAuthorized().then((isAuthorized: boolean) => {\r\n        if (isAuthorized) {\r\n          activate(injected, undefined, true).catch(() => {\r\n            setTried(true)\r\n          })\r\n        } else {\r\n          setTried(true)\r\n        }\r\n      })\r\n    }, []) // intentionally only running on mount (make sure it's only mounted once :))\r\n  \r\n    // if the connection worked, wait until we get confirmation of that to flip the flag\r\n    useEffect(() => {\r\n      if (!tried && active) {\r\n        setTried(true)\r\n      }\r\n    }, [tried, active])\r\n  \r\n    return tried\r\n  }\r\n\r\n  export function useInactiveListener(suppress: boolean = false) {\r\n    const { active, error, activate } = useWeb3React()\r\n  \r\n    useEffect((): any => {\r\n      const { ethereum } = window as any\r\n      if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n        const handleConnect = () => {\r\n          console.log(\"Handling 'connect' event\")\r\n          activate(injected)\r\n        }\r\n        const handleChainChanged = (chainId: string | number) => {\r\n          console.log(\"Handling 'chainChanged' event with payload\", chainId)\r\n          activate(injected)\r\n        }\r\n        const handleAccountsChanged = (accounts: string[]) => {\r\n          console.log(\"Handling 'accountsChanged' event with payload\", accounts)\r\n          if (accounts.length > 0) {\r\n            activate(injected)\r\n          }\r\n        }\r\n        const handleNetworkChanged = (networkId: string | number) => {\r\n          console.log(\"Handling 'networkChanged' event with payload\", networkId)\r\n          activate(injected)\r\n        }\r\n  \r\n        ethereum.on('connect', handleConnect)\r\n        ethereum.on('chainChanged', handleChainChanged)\r\n        ethereum.on('accountsChanged', handleAccountsChanged)\r\n        ethereum.on('networkChanged', handleNetworkChanged)\r\n  \r\n        return () => {\r\n          if (ethereum.removeListener) {\r\n            ethereum.removeListener('connect', handleConnect)\r\n            ethereum.removeListener('chainChanged', handleChainChanged)\r\n            ethereum.removeListener('accountsChanged', handleAccountsChanged)\r\n            ethereum.removeListener('networkChanged', handleNetworkChanged)\r\n          }\r\n        }\r\n      }\r\n    }, [active, error, suppress, activate])\r\n  }","E:\\Lokian.eth\\src\\StatBar.tsx",[],"E:\\Lokian.eth\\src\\components\\Spinner.tsx",[],"E:\\Lokian.eth\\src\\sprites-copy\\index.js",[],"E:\\Lokian.eth\\src\\sprites\\index.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":12,"column":1,"nodeType":"66","endLine":18,"endColumn":2},{"ruleId":"67","severity":1,"message":"68","line":286,"column":10,"nodeType":"69","messageId":"70","endLine":286,"endColumn":18},{"ruleId":"71","severity":1,"message":"72","line":321,"column":6,"nodeType":"73","endLine":321,"endColumn":38,"suggestions":"74"},{"ruleId":"71","severity":1,"message":"72","line":371,"column":6,"nodeType":"73","endLine":371,"endColumn":60,"suggestions":"75"},{"ruleId":"71","severity":1,"message":"72","line":418,"column":6,"nodeType":"73","endLine":418,"endColumn":37,"suggestions":"76"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"71","severity":1,"message":"77","line":21,"column":8,"nodeType":"73","endLine":21,"endColumn":10,"suggestions":"78"},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'coinData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshMons'. Either include it or remove the dependency array.","ArrayExpression",["81"],["82"],["83"],"React Hook useEffect has a missing dependency: 'activate'. Either include it or remove the dependency array.",["84"],"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [activatingConnector, connector, refreshMons]",{"range":"93","text":"94"},"Update the dependencies array to be: [account, library, disableBuyItemBtn, disableFightBtn, refreshMons]",{"range":"95","text":"96"},"Update the dependencies array to be: [account, library, fightTxDone, refreshMons]",{"range":"97","text":"98"},"Update the dependencies array to be: [activate]",{"range":"99","text":"100"},[9290,9322],"[activatingConnector, connector, refreshMons]",[10501,10555],"[account, library, disableBuyItemBtn, disableFightBtn, refreshMons]",[11913,11944],"[account, library, fightTxDone, refreshMons]",[572,574],"[activate]"]