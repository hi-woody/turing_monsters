[{"E:\\Lokian.eth\\src\\index.tsx":"1","E:\\Lokian.eth\\src\\AppContainer.tsx":"2","E:\\Lokian.eth\\src\\App.tsx":"3","E:\\Lokian.eth\\src\\utils\\txFail.js":"4","E:\\Lokian.eth\\src\\utils\\txSuccess.js":"5","E:\\Lokian.eth\\src\\wallet\\connectors.ts":"6","E:\\Lokian.eth\\src\\wallet\\hooks.ts":"7","E:\\Lokian.eth\\src\\StatBar.tsx":"8","E:\\Lokian.eth\\src\\components\\Spinner.tsx":"9","E:\\Lokian.eth\\src\\sprites-copy\\index.js":"10","E:\\Lokian.eth\\src\\sprites\\index.js":"11"},{"size":203,"mtime":1632645713483,"results":"12","hashOfConfig":"13"},{"size":461,"mtime":1632416988498,"results":"14","hashOfConfig":"13"},{"size":46704,"mtime":1648811473423,"results":"15","hashOfConfig":"13"},{"size":291,"mtime":1639637154919,"results":"16","hashOfConfig":"13"},{"size":343,"mtime":1638107782317,"results":"17","hashOfConfig":"13"},{"size":171,"mtime":1648796480580,"results":"18","hashOfConfig":"13"},{"size":2588,"mtime":1633872796792,"results":"19","hashOfConfig":"13"},{"size":257,"mtime":1633872639985,"results":"20","hashOfConfig":"13"},{"size":805,"mtime":1633340784350,"results":"21","hashOfConfig":"13"},{"size":7315,"mtime":1648804917278,"results":"22","hashOfConfig":"13"},{"size":7315,"mtime":1648804917278,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18w6p6u",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Lokian.eth\\src\\index.tsx",[],"E:\\Lokian.eth\\src\\AppContainer.tsx",["48"],"import React from 'react'\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport App from './App'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\n\r\nfunction getLibrary(provider: any): Web3Provider {\r\n  const library = new Web3Provider(provider)\r\n  library.pollingInterval = 12000\r\n  return library\r\n}\r\n\r\nexport default function () {\r\n  return (\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n      <App />\r\n    </Web3ReactProvider>\r\n  )\r\n}\r\n","E:\\Lokian.eth\\src\\App.tsx",["49","50","51","52"],"E:\\Lokian.eth\\src\\utils\\txFail.js",[],"E:\\Lokian.eth\\src\\utils\\txSuccess.js",[],"E:\\Lokian.eth\\src\\wallet\\connectors.ts",[],"E:\\Lokian.eth\\src\\wallet\\hooks.ts",["53"],"import { useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\n\r\nimport { injected } from './connectors'\r\n\r\nexport function useEagerConnect() {\r\n    const { activate, active } = useWeb3React()\r\n  \r\n    const [tried, setTried] = useState(false)\r\n  \r\n    useEffect(() => {\r\n      injected.isAuthorized().then((isAuthorized: boolean) => {\r\n        if (isAuthorized) {\r\n          activate(injected, undefined, true).catch(() => {\r\n            setTried(true)\r\n          })\r\n        } else {\r\n          setTried(true)\r\n        }\r\n      })\r\n    }, []) // intentionally only running on mount (make sure it's only mounted once :))\r\n  \r\n    // if the connection worked, wait until we get confirmation of that to flip the flag\r\n    useEffect(() => {\r\n      if (!tried && active) {\r\n        setTried(true)\r\n      }\r\n    }, [tried, active])\r\n  \r\n    return tried\r\n  }\r\n\r\n  export function useInactiveListener(suppress: boolean = false) {\r\n    const { active, error, activate } = useWeb3React()\r\n  \r\n    useEffect((): any => {\r\n      const { ethereum } = window as any\r\n      if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n        const handleConnect = () => {\r\n          console.log(\"Handling 'connect' event\")\r\n          activate(injected)\r\n        }\r\n        const handleChainChanged = (chainId: string | number) => {\r\n          console.log(\"Handling 'chainChanged' event with payload\", chainId)\r\n          activate(injected)\r\n        }\r\n        const handleAccountsChanged = (accounts: string[]) => {\r\n          console.log(\"Handling 'accountsChanged' event with payload\", accounts)\r\n          if (accounts.length > 0) {\r\n            activate(injected)\r\n          }\r\n        }\r\n        const handleNetworkChanged = (networkId: string | number) => {\r\n          console.log(\"Handling 'networkChanged' event with payload\", networkId)\r\n          activate(injected)\r\n        }\r\n  \r\n        ethereum.on('connect', handleConnect)\r\n        ethereum.on('chainChanged', handleChainChanged)\r\n        ethereum.on('accountsChanged', handleAccountsChanged)\r\n        ethereum.on('networkChanged', handleNetworkChanged)\r\n  \r\n        return () => {\r\n          if (ethereum.removeListener) {\r\n            ethereum.removeListener('connect', handleConnect)\r\n            ethereum.removeListener('chainChanged', handleChainChanged)\r\n            ethereum.removeListener('accountsChanged', handleAccountsChanged)\r\n            ethereum.removeListener('networkChanged', handleNetworkChanged)\r\n          }\r\n        }\r\n      }\r\n    }, [active, error, suppress, activate])\r\n  }","E:\\Lokian.eth\\src\\StatBar.tsx",[],"E:\\Lokian.eth\\src\\components\\Spinner.tsx",[],"E:\\Lokian.eth\\src\\sprites-copy\\index.js",[],"E:\\Lokian.eth\\src\\sprites\\index.js",[],{"ruleId":"54","severity":1,"message":"55","line":12,"column":1,"nodeType":"56","endLine":18,"endColumn":2},{"ruleId":"57","severity":1,"message":"58","line":286,"column":10,"nodeType":"59","messageId":"60","endLine":286,"endColumn":18},{"ruleId":"61","severity":1,"message":"62","line":314,"column":6,"nodeType":"63","endLine":314,"endColumn":38,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"62","line":364,"column":6,"nodeType":"63","endLine":364,"endColumn":60,"suggestions":"65"},{"ruleId":"61","severity":1,"message":"62","line":411,"column":6,"nodeType":"63","endLine":411,"endColumn":37,"suggestions":"66"},{"ruleId":"61","severity":1,"message":"67","line":21,"column":8,"nodeType":"63","endLine":21,"endColumn":10,"suggestions":"68"},"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","@typescript-eslint/no-unused-vars","'coinData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshMons'. Either include it or remove the dependency array.","ArrayExpression",["69"],["70"],["71"],"React Hook useEffect has a missing dependency: 'activate'. Either include it or remove the dependency array.",["72"],{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [activatingConnector, connector, refreshMons]",{"range":"81","text":"82"},"Update the dependencies array to be: [account, library, disableBuyItemBtn, disableFightBtn, refreshMons]",{"range":"83","text":"84"},"Update the dependencies array to be: [account, library, fightTxDone, refreshMons]",{"range":"85","text":"86"},"Update the dependencies array to be: [activate]",{"range":"87","text":"88"},[8866,8898],"[activatingConnector, connector, refreshMons]",[10076,10130],"[account, library, disableBuyItemBtn, disableFightBtn, refreshMons]",[11488,11519],"[account, library, fightTxDone, refreshMons]",[572,574],"[activate]"]